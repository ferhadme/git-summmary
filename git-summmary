#!/usr/bin/perl

=about

Author: Farhad Mehdizada (@ferhadme)

Perl script for visualizing repository summaries recursively starting from the specified directory location
Uses git-summary (git-extras) as a dependency

Usage: ./git-summmary starting-directory

base directory                  : <base directory name>
repo age (oldest / latest)      : <oldest> / <latest>
active (earliest / most recent) : <earliest> / <most recent>
commits                         : <total number of commits>
files                           : <total number of files>
TODO: authors...

=cut

use strict;
use warnings;
use v5.32;



sub main {
    my $path = shift @ARGV or die "Usage: ./git-summmary starting-directory";
    if (not defined $path) {
	die "Usage: ./git-summmary starting-directory";
    }

    my $git_summary_path = system("which git-summary");
    if ($git_summary_path != 0) {
	die "git-summary (git-extras) as a dependency not found";
    }

    my %summary_hash = &init_summary($path);
    &traverse_repos($path, \%summary_hash);
    &show_git_summmary(\%summary_hash);
}

sub traverse_repos {
    (my $path, my $summary_hash_ref) = (@_);

    if (not -d $path) {
	return;
    }

    chdir($path);
    if (-d ".git") {
	print "Git repository found ", $path, "\n";
	&update_summary($summary_hash_ref);
    }

    foreach my $dir (<*>) {
	&traverse_repos($dir, $summary_hash_ref);
    }

    chdir("..");
}

sub init_summary {
    (
     "dirname" => (@_),
     "min_age" => 0,
     "max_age" => 0,
     "min_active" => 0,
     "max_active" => 0,
     "commits" => 0,
     "files" => 0
    );
}

sub update_summary {
    my ($summ_hash_ref) = (@_);
    my $curr_summ = `git summary`;

    $curr_summ =~ /repo age\s*:\s((\d+)\syears?,\s)?(\d+)\smonths/;
    # TODO: Fix undefined #2
    my $curr_age = (((defined $2) ? $2 : 0) * 12) + $3;
    &init_min_max_params($curr_age, "age", $summ_hash_ref);

    my ($curr_active) = ($curr_summ =~ /active\s*:\s(\d+)\sdays/);
    &init_min_max_params($curr_active, "active", $summ_hash_ref);

    my ($commits) = ($curr_summ =~ /commits\s*:\s(\d+)/);
    $summ_hash_ref->{"commits"} += $commits;

    my ($files) = ($curr_summ =~ /files\s*:\s(\d+)/);
    $summ_hash_ref->{"files"} += $files;

    print $curr_summ, "\n";
}

sub init_min_max_params {
    (my $curr, my $hash_key, my $hash_ref) = (@_);

    if ($curr < $hash_ref->{"min_$hash_key"}) {
	$hash_ref->{"min_$hash_key"} = $curr;
    }

    if ($curr > $hash_ref->{"max_$hash_key"}) {
	$hash_ref->{"max_$hash_key"} = $curr;
    }
}

sub show_git_summmary {
    (my $summary_hash_ref) = (@_);

    print "base directory                  : ", $summary_hash_ref->{"dirname"}, "\n";
    print "repo age (oldest / latest)      : ", $summary_hash_ref->{"min_age"}, " / ",
	$summary_hash_ref->{"max_age"}, "\n";
    print "active (earliest / most recent) : ", $summary_hash_ref->{"min_active"}, " / ",
	$summary_hash_ref->{"max_active"}, "\n";
    print "commits                         : ", $summary_hash_ref->{"commits"}, "\n";
    print "files                           : ", $summary_hash_ref->{"files"}, "\n";

    # TODO: authors...
}

main;
exit;
